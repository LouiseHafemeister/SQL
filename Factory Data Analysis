USE mavenfuzzyfactory;
-- Getting to know the data 
SELECT 
	website_sessions.utm_content,
    COUNT(DISTINCT website_sessions.website_session_id) AS Sessions,
    COUNT(DISTINCT orders.order_id) AS Orders,
    COUNT(DISTINCT orders.order_id)/COUNT(DISTINCT website_sessions.website_session_id) AS session_to_order_rate
FROM website_sessions
	LEFT JOIN orders
		ON orders.website_session_id = website_sessions.website_session_id
WHERE website_sessions.website_session_id BETWEEN 1000 AND 2000
GROUP BY 
	utm_content
ORDER BY Sessions DESC;


-- A stakeholder wants to know where the website sessions are coming from with a 
-- breakdwon by source, campaign, and referring domain.

SELECT
	utm_source,
    utm_campaign,
    http_referer,
    COUNT(DISTINCT website_session_id) AS Sessions
FROM website_sessions
WHERE created_at < '2012-04-12'
GROUP BY 
	utm_source,
    utm_campaign,
    http_referer
ORDER BY Sessions DESC;

-- Marketing Director asked for the conversion rate for gsearch and nonbrand sessions.
SELECT 
	COUNT(DISTINCT website_sessions.website_session_id) AS Sessions,
    COUNT(DISTINCT orders.order_id) AS Orders,
    COUNT(DISTINCT orders.order_id) / COUNT(DISTINCT website_sessions.website_session_id) 
    AS Converstion_Rate
FROM website_sessions
LEFT JOIN orders
ON website_sessions.website_session_id = orders.website_session_id
WHERE website_sessions.created_at < '2012-04-14' 
	AND utm_source = 'gsearch' 
    AND utm_campaign = 'nonbrand';

-- Learning to use count case 
SELECT 
	primary_product_id,
    COUNT(DISTINCT CASE WHEN items_purchased = 1 THEN order_id ELSE NULL END) AS count_single_item_orders,
    COUNT(DISTINCT CASE WHEN items_purchased = 2 THEN order_id ELSE NULL END) AS count_two_item_orders
FROM orders
WHERE order_id BETWEEN 31000 AND 32000
GROUP BY 1;

-- Marketing Director wants to know the gsearch and nonbrand session volume by week
SELECT 
	MIN(DATE(website_sessions.created_at)) AS Week_date,
    COUNT(DISTINCT website_sessions.website_session_id) AS Sessions    
FROM website_sessions
WHERE website_sessions.created_at < '2012-05-10'
	AND utm_source = 'gsearch' 
    AND utm_campaign = 'nonbrand'
GROUP BY 
	YEAR(created_at),
	WEEK(created_at);
    
-- conversiton rate from session to order by device type 
SELECT 
	website_sessions.device_type,
    COUNT(DISTINCT website_sessions.website_session_id) AS Sessions,
    COUNT(DISTINCT orders.order_id) AS Orders,
    COUNT(DISTINCT orders.order_id) / COUNT(DISTINCT website_sessions.website_session_id) 
    AS Converstion_Rate_By_Device
FROM website_sessions
LEFT JOIN orders
ON website_sessions.website_session_id = orders.website_session_id
WHERE website_sessions.created_at < '2012-05-11'
	AND utm_source = 'gsearch'
    AND utm_campaign = 'nonbrand'
GROUP BY device_type;

-- count of sessions by week by device type between 4/15/2012 and 5/19/2012
SELECT 
	MIN(DATE(website_sessions.created_at)) AS Week_date,
    COUNT(DISTINCT CASE WHEN device_type = 'mobile' THEN website_session_id ELSE NULL END) AS mob_sessions,
    COUNT(DISTINCT CASE WHEN device_type = 'desktop' THEN website_session_id ELSE NULL END) AS dtop_sessions   
FROM website_sessions
WHERE website_sessions.created_at > '2012-04-15' 
	AND website_sessions.created_at <'2012-06-09'
	AND utm_source = 'gsearch' 
    AND utm_campaign = 'nonbrand'
GROUP BY 
	YEAR(created_at),
	WEEK(created_at);
